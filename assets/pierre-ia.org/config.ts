import type { Config } from '../../utils/_schema'

//
// ASTUCE
// Pour vous assurer que le fichier de configuration est correctement
// param√©tr√©, lancer dans votre terminal `bun test:config`
//

export default {
  // Doit √™tre √† la fois le nom de domaine avec extension du bailleur
  // (ex. icfhabitat.fr) et le nom du dossier dans `assets/`
  id: 'pierre-ia.org',

  // Vous pouvez communiquer des donn√©es externes √† PIERRE via son URL avec le param√©tre
  // de requ√™te `data`. S'il y a plusieurs donn√©es, s√©parez les par
  // un pipe (|). Ces donn√©es peuvent, apr√®s avoir √©t√© tranform√©es, √™tre
  // utilis√©es dans un prompt. Par exemple, pour que PIERRE connaisse
  // toujours le pr√©nom du locataire et son solde locataire.
  //
  // Ex : http://localhost:3000/?data=Luc|-7.12
  //
  // Si vous ne souhaitez pas utiliser cette fonctionnalit√© : custom_data: {}
  //
  // La fonction ci-apr√®s transforme les donn√©es communiqu√©es via `data`
  // en une `string` customisable et compr√©hensible par un LLM.
  custom_data: {
    format: (data: string[]) => {
      return `${data[0]} a une solde locataire de ${data[1]} euros` // "Luc a un solde locataire de -7.12 euros"
    }
  },

  // Pour int√©grer les conversations de PIERRE dans votre SI, vous pouvez le
  // connectez √† vos API. Un webhook sera √©mis vers vos API √† chaque message
  // adress√© √† PIERRE ou r√©pondu par PIERRE. L'URL, la clef API et le format du
  // webhook sont d√©finis ci-dessous.
  api: [
    // Si le webhook doit √™tre adress√© √† plusieurs
    // de vos API, dupliquer l'objet ci-dessous.
    {
      // La clef API correspondante doit √™tre renseign√©e dans vos variables
      // d'environnement. A ce jour, PIERRE autorise maximum 3 webhooks :
      // WEBHOOK_KEY_1, WEBHOOK_KEY_2 et WEBHOOK_KEY_3
      key: 'WEBHOOK_KEY_1',

      // L'URL √† laquelle PIERRE envoie le webhook (ici un exemple)
      url: 'ex : https://api.ikos.com',

      // Le format des donn√©es envoy√©es par le webhook. Il peut notamment
      // inclure des `custom_data` permettant d'identifier le locataire
      // (cf. custom_data plus haut). Ne manipuler que l'objet retourn√©.
      // - custom_data: celles pass√©e via le param√®tre de requ√™te `data`
      // - content : la question de l'utilisateur ou la r√©ponse de PIERRE
      // - role : user (= utilisateur), assitant ou system (= PIERRE)
      format: ({ custom_data, content, role }) => {
        return {
          client_id: custom_data[0],
          date: Date.now(),
          content: content,
          role: role
        }
      }
    }
  ],

  // Les diff√©rentes versions (ou `context`) de PIERRE
  // que vous souhaitez rendre disponible. Exemples :
  // - `default`  : une version de PIERRE accessible depuis aux candidats ou locataires
  // - `team`     : une versiond de PIERRE √† destination exclusive des collaborateurs
  // - `no_rag`   : une version de PIERRE qui n'utilise pas de bases de connaissances (ChatGPT clone)
  context: {
    // La version par d√©faut
    // Il faut imp√©rativement et a minima renseigner `default`.
    default: {
      // Les diff√©rents mod√®les de langage utilis√©s par PIERRE.
      // Il est imp√©ratif que la ou les clefs d'API correspondantes
      // soient renseign√©es dans les variables d'environnement.
      //
      // Voir https://github.com/charnould/pierre?tab=readme-ov-file#mod√®les-de-langage-ou-llm
      // pour plus d'informations sur les mod√®les de langage utilis√©s par PIERRE et leur fonction.
      //
      // Ci-apr√®s, une liste non-exhaustives de mod√®les utilisables (hors embeddings):
      // - "cohere('command-r-plus')",
      // - "mistral('mistral-large-latest')",
      // - "mistral('mistral-small-latest')",
      // - "google('gemini-1.5-pro-latest')",
      // - "google('gemini-1.5-flash-latest')",
      // - "anthropic('claude-3-5-sonnet-20241022')",
      // - "anthropic('claude-3-5-haiku-20241022')",
      // - "openai('gpt-4o-2024-11-20')",
      // - "togetherai('meta-llama/Llama-3.3-70B-Instruct-Turbo')"
      // - "groq('llama-3.3-70b-versatile')"
      // - "cerebras('llama3.1-8b')"
      models: {
        // Les embeddings sont des repr√©sentations vectorielles
        // de textes qui en capturent le sens s√©mantique.
        // IMPORTANT : NE PAS MODIFIER CE MOD√àLE.
        embed_with: 'text-embedding-3-large',

        // Le mod√®le utilis√© pour augmenter/enrichir les requ√™tes de l'utilisateur.
        // Pour minimiser les co√ªts : openai('gpt-4o-mini-2024-07-18') ou √©quivalent.
        // Pour maximiser l'intelligence : openai('gpt-4o-2024-11-20') ou √©quivalent.
        augment_with: "openai('gpt-4o-mini-2024-07-18')",

        // Le mod√®le utlis√© par le reranker qui s'assure que les √©l√©ments de
        // r√©ponses retourn√©s par les bases de connaissances sont pertinents.
        // Il est fortement recommand√© d'utiliser `openai('gpt-4o-mini-2024-07-18')`
        // ou un mod√®le √©quivalent afin de ma√Ætriser les co√ªts. Le reranker est
        // en effet consommateur de tokens.
        rerank_with: "openai('gpt-4o-mini-2024-07-18')",

        // Le mod√®le qui g√©n√®re les r√©ponses en s'appuyant sur les √©l√©ments
        // les plus pertinents retourn√©s par le reranker.
        // Pour minimiser les co√ªts : openai('gpt-4o-mini-2024-07-18') ou √©quivalent.
        // Pour maximiser l'intelligence : openai('gpt-4o-2024-11-20') ou √©quivalent.
        answer_with: "openai('gpt-4o-mini-2024-07-18')"
      },

      // Le num√©ro de t√©l√©phone qui permet d'utiliser PIERRE via SMS.
      // Assurez-vous de bien respecter le format (`00` au d√©but).
      // Renseigner `null` si vous n'avez pas param√©tr√© de num√©ro.
      phone: '0033939070074',

      // Est-ce que le contexte `default` est accessible √† tous les utilisateurs ?
      //
      // Si `false` :
      //  - Le contexte sera accessible √† 100 % des visiteurs sur internet.
      //  - Il s'agit du param√©trage √† renseigner pour un chatbot accessible aux candidats ou locataires.
      //
      // Si `true` :
      //  - Le contexte ne sera accessible qu'aux utilisateurs d√ªment habilit√©s et connect√©s.
      //  - C'est le param√©trage √† choisir pour restreindre l'usage - par exemple - aux collaborateurs.
      //
      // Pour vous connecter la premi√®re fois, saississez `admin@pierre-ia.org` et la valeur de
      // la variable d'environnement `AUTH_PASSWORD`, puis cr√©er des utilisateurs.
      protected: false,

      // Quelles connaissances peut utiliser le contexte `default`
      // lorsqu'il g√©n√®re ses r√©ponses ?
      knowledge: {
        // `community` correspond aux connaissances en open data de PIERRE.
        // Il s'agit de connaissances g√©n√©rales sur les HLM. En principe, `community`
        // doit toujours √™tre `true` pour r√©pondre en qualit√© aux questions.
        community: true,

        // `proprietary` correspond aux connaissances propres √† un organisme HLM, qu'il
        // ne souhaite pas partager avec `community` et qu'il g√®re en son nom propre.
        // Ces connaissances peuvent √™tre :
        //   - `public`, c'est-√†-dire des donn√©es que l'organisme souhaite n√©anmoins
        //      rendre publiques aux candidats ou locataires acc√©dant au contexte
        //      (ex : les coordonn√©es des gardiens, agences de proximit√©, etc.)
        //   - `private` (ex : une proc√©dure d'astreinte au seul usage des √©quipes).
        //      En toute logique, si `proprietary.private` est `true`, `protected`
        //      doit aussi √™tre `true`.
        proprietary: { public: false, private: false }

        // Astuce : Si vous renseignez `false` pour l'ensemble des connaissances
        // ci-dessus, PIERRE se comportera comme un simple wrapper autour d'un
        // LLM, sans base de connaissances. Les r√©ponses seront quasi
        // instantan√©es, mais le risque d'hallucinations important.
      },

      // Une information qui n'est pas visible par l'utilisateur,
      // mais qui permet √† PIERRE de savoir dans quel contexte il
      // lui faut consid√©rer les interactions/√©changes.
      audience:
        'The user‚Äôs primary focus is on housing, with a particular interest in social housing in France.',

      // Une information qui n'est pas visible par l'utilisateur, mais qui permet
      // √† PIERRE de savoir qui il est et comment se comporter.
      persona:
        "You‚Äôre PIERRE, an open-source, multilingual, and multichannel AI created to assist social housing candidates, tenants and employees with their everyday questions. Your source code is accessible to all at https://www.pierre-ia.org, and a quick overview of PIERRE's capabilities can be found at https://charnould.github.io/pierre/assets/PIERRE-Pr√©sentation.pdf.",

      // Le message qui s'affiche par d√©faut dans l'interface www de PIERRE.
      greeting: [
        'Bonjour üñêÔ∏è,',
        'Je suis PIERRE, une intelligence artificielle open source, personnalisable, multicanale et plurilingue au service du mouvement HLM, de ses candidats, locataires et collaborateurs.',
        'Ma mission : r√©pondre 24/7/365 √† toutes les questions de ¬´ premier niveau ¬ª des candidats et locataires ou celles (plus complexes) des √©quipes.',
        "PS. Je n'ai pas connaissance √† ce jour des sp√©cificit√©s des bailleurs."
      ],

      // Les exemples qui s'affichent par d√©faut dans l'interface www de PIERRE.
      examples: [
        'Comment d√©poser mon pr√©avis de cong√© pour mon logement ? Et avez-vous un mod√®le de courrier ?',
        "Y-a-t-il des associations d'entraide dans le cadre de violences conjugales dans le Vaucluse ?",
        'Enqu√™te SLS, k√©zako + suis-je concern√© ?',
        "Qu'est-ce que l'avance Loca-Pass et comment savoir si j'y suis √©ligible ?",
        'Je cherche un logement social dans le Cantal. Comment d√©poser un dossier et quel est le processus ?',
        'ŸÉŸäŸÅŸäÿ© ÿßŸÑÿßÿ™ÿµÿßŸÑ ÿ®ÿßŸÑŸÖŸÉÿ™ÿ® ÿßŸÑÿ±ÿ¶Ÿäÿ≥Ÿä ŸÑÿ®ŸÑÿØŸäÿ© Grand Dijon Habitatÿü'
      ],

      // Une mention qui s'affiche √† la fin de chaque r√©ponse de l'IA.
      // Pour ne pas afficher de mention, indiquer `null`.
      disclaimer: 'Une IA peut se tromper. V√©rifiez les informations importantes.'
    },

    // Une 2√®me personnalit√©.
    // Vous pouvez dupliquer cette objet pour cr√©er autant de personnalit√©s
    // que n√©cessaire. Vous pouvez nommer cette personnalit√© par n'importe
    // quelle chaine de caract√®res (ici `team`). A l'inverse, vous pouvez
    // supprimer `team` et plus bas `no_rag` si vous n'avez pas usage
    // de personnalit√©s compl√©mentaires.
    team: {
      models: {
        embed_with: 'text-embedding-3-large',
        augment_with: "openai('gpt-4o-mini-2024-07-18')",
        rerank_with: "openai('gpt-4o-mini-2024-07-18')",
        answer_with: "openai('gpt-4o-mini-2024-07-18')"
      },
      phone: null,
      protected: false,
      knowledge: {
        community: true,
        proprietary: { public: true, private: true }
      },
      audience:
        'The user is an employee of Pierre Habitat, a fictional social housing company operating in France.',
      persona:
        'You are PIERRE, the ultimate AI assistant, expertly designed to support all collaborators at Pierre Habitat (a fictional social housing company operating around Dijon, France) in their day-to-day tasks. With an extensive knowledge of social housing, regulations, and internal processes, you‚Äôre here to streamline workflows, provide accurate information, and deliver efficient solutions. Always up-to-date and fully aligned with the company‚Äôs values, GUSTAVE is the dependable, knowledgeable coworker that everyone can rely on.',
      greeting: [
        'Bonjour üñêÔ∏è,',
        "Je suis PIERRE, l'assistant des collaborateurs de Pierre Habitat, un bailleur social fictif.",
        'Ma mission : donner √† voir comment une IA peut aider les collaborateurs des bailleurs sociaux au quotidien.',
        'Choisissez un exemple ci-dessous.',
        '‚Äï‚Äï‚Äï‚Äï',
        "Pour info., je peux apprendre en quelques secondes tout ce qu'il a √† savoir de vos fichiers Word et Excel."
      ],
      examples: [
        "Qui est d'astreinte la semaine du 25 f√©vrier prochain ?",
        'Quelle est la proc√©dure si un locataire est bloqu√© dans un ascenseur ?',
        'Qui est le prestataire ascenseur de la r√©sidence Becquerel ?',
        'Un locataire me demande comment r√©gler un probl√®me de voisinnage, r√©dige moi un email.',
        "Quels impacts du PACS lorsqu'un locataire veut rompre son contrat de bail ?"
      ],
      disclaimer: "Les donn√©es retourn√©es par l'IA sont ici strictement fictives."
    },

    //
    // Une 3√®me personnalit√© pour faire la d√©monstration que PIERRE
    // peut aussi √™tre un simple wrapper autour d'un LLM. Dans ce
    // cas, les r√©ponses sont quasi instantan√©es, mais le risque
    // d'hallucinations important.
    no_rag: {
      models: {
        embed_with: 'text-embedding-3-large',
        augment_with: "openai('gpt-4o-mini-2024-07-18')",
        rerank_with: "openai('gpt-4o-mini-2024-07-18')",
        answer_with: "openai('gpt-4o-2024-11-20')"
      },
      phone: null,
      protected: true,
      knowledge: {
        community: false,
        proprietary: { public: false, private: false }
      },
      audience: '',
      persona: '',
      greeting: [
        'Bonjour üñêÔ∏è,',
        'Je suis PIERRE, une IA open source, personnalisable, multicanale et plurilingue au service du mouvement HLM, de ses candidats, locataires et collaborateurs.',
        "Comment puis-je vous aider aujourd'hui ?",
        '‚Äï‚Äï‚Äï‚Äï',
        'Pour information, je ne puise ici dans aucune base de connaissances, je suis donc un quasi-clone de ChatGPT, Claude ou autres. Ceci explique ma vitesse de r√©ponse.'
      ],
      examples: [
        "√âtablis un plan de communication interne pour le projet GUSTAVE : une IA au service des agents et cadres d'astreinte de Pierre Habitat",
        'R√©dige un r√©sum√© en 4-5 bullets points sur les enjeux-logements de la ville de Paris'
      ],
      disclaimer: 'Une IA peut halluciner. V√©rifier les informations importantes.'
    },
    //
    // For testing purpose only
    test: {
      models: {
        embed_with: 'text-embedding-3-large',
        augment_with: "openai('gpt-4o-mini-2024-07-18')",
        rerank_with: "openai('gpt-4o-mini-2024-07-18')",
        answer_with: "openai('gpt-4o-mini-2024-07-18')"
      },
      phone: null,
      protected: true,
      knowledge: {
        community: true,
        proprietary: { public: true, private: true }
      },
      audience: '',
      persona: '',
      greeting: [],
      examples: [],
      disclaimer: ''
    }
  }
} as Config
